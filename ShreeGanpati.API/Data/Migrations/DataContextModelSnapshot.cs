// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShreeGanpati.API.Data;

#nullable disable

namespace ShreeGanpati.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.Jewellery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Jewels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://raw.githubusercontent.com/Priyanshsoni-18/Project_Images/main/green_diamond_pendant.png",
                            Name = "Green Diamond Pendant",
                            Price = 45000.0
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://raw.githubusercontent.com/Priyanshsoni-18/Project_Images/main/ruby_ring.png",
                            Name = "Gold Diamond and Ruby Ring",
                            Price = 85000.0
                        },
                        new
                        {
                            Id = 3,
                            Image = "https://raw.githubusercontent.com/Priyanshsoni-18/Project_Images/main/diamond_earring.png",
                            Name = "Diamond Earring",
                            Price = 25000.0
                        },
                        new
                        {
                            Id = 4,
                            Image = "https://raw.githubusercontent.com/Priyanshsoni-18/Project_Images/main/diamond_ring.png",
                            Name = "Silver Diamond Ring",
                            Price = 8000.0
                        },
                        new
                        {
                            Id = 5,
                            Image = "https://raw.githubusercontent.com/Priyanshsoni-18/Project_Images/main/gold_ring.png",
                            Name = "Gold Diamond Ring",
                            Price = 60000.0
                        });
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.JewelleryOption", b =>
                {
                    b.Property<int>("JewelleryId")
                        .HasColumnType("int");

                    b.Property<string>("Metel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddOns")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("JewelleryId", "Metel", "AddOns");

                    b.ToTable("jewelleryOptions");

                    b.HasData(
                        new
                        {
                            JewelleryId = 1,
                            Metel = "Gold",
                            AddOns = "Diamond"
                        },
                        new
                        {
                            JewelleryId = 2,
                            Metel = "Silver",
                            AddOns = "Emerald"
                        },
                        new
                        {
                            JewelleryId = 3,
                            Metel = "Platinum",
                            AddOns = "Sapphire"
                        },
                        new
                        {
                            JewelleryId = 4,
                            Metel = "Gold",
                            AddOns = "Ruby"
                        },
                        new
                        {
                            JewelleryId = 5,
                            Metel = "Silver",
                            AddOns = "Topaz"
                        });
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("OrderAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddOns")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("JewelleryId")
                        .HasColumnType("int");

                    b.Property<string>("Metel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId1")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderId1");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.JewelleryOption", b =>
                {
                    b.HasOne("ShreeGanpati.API.Data.Entities.Jewellery", "Jewellery")
                        .WithMany("Options")
                        .HasForeignKey("JewelleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jewellery");
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("ShreeGanpati.API.Data.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.Jewellery", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("ShreeGanpati.API.Data.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
